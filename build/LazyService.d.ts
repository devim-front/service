import { Service } from './Service';
/**
 * Представляет "ленивый" сервис. Ленивый сервис не требует инициализации.
 * Непосредственно экземпляр сервиса создаётся во время первого обращения к
 * нему через метод get. Соответственно, конструктор ленивого сервиса не
 * должен иметь параметров.
 */
export declare class LazyService extends Service {
    /**
     * Возвращает экземпляр сервиса. Если экземпляр сервиса ещё не был создан,
     * создаёт его.
     */
    static get<T extends typeof LazyService>(this: T): InstanceType<T>;
    /**
     * Инициализирует экземпляр сервиса. В случае с ленивым сервисом, метод
     * просто создаёт экземпляр класса, если тот не был создан ранее. Повторные
     * вызовы init его не пересоздают. Чтобы пересоздать экземпляр принудительно,
     * используйте метод delete, а затем init.
     */
    static init(): void;
}
